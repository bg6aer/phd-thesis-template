\documentclass[a4paper,10pt]{article}
\usepackage[utf8x]{inputenc}


%TODO on template:
% - Add index
% - Clean preamble.tex, change template
% 


% ***** And the Macros in there: *****
  \newcommand{\important}[1]{\textit{#1}}
  \newcommand{\WoT}{WoT}
  \newcommand{\WoTLong}{Web of Things}
  \newcommand{\sg}{Smart Gateway}
  \newcommand{\sgs}{Smart Gateways}
  \newcommand{\sts}{smart things}
  \newcommand{\st}{smart thing}
  \newcommand{\stsBeg}{Smart things}
  \newcommand{\stsBig}{Smart Things}
  \newcommand{\ws}{\texttt{WS-*}}
  \newcommand{\rest}{REST}
  \newcommand{\mget}{\texttt{GET}}
  \newcommand{\mpost}{\texttt{POST}}
  \newcommand{\mput}{\texttt{PUT}}
  \newcommand{\mdelete}{\texttt{DELETE}}
  \newcommand{\newterm}[1]{\textit{#1}}

%opening
\title{A Web of Things Application Architecture - Integrating the Real-World into the Web}
\author{Dominique Guinard}


\begin{document}

\maketitle
\section*{Abstract}

A central concern in the area of pervasive computing has been the integration of digital artifacts with the physical world and vice-versa. Recent developments in the field of embedded devices have led to \newterm{\sts{}} increasingly populating our daily life. We define \sts{} as digitally enhanced physical objects and devices that have communication capabilities. Application domains are for instance wireless sensor and actuator networks in cities making them more context-aware and thus smarter. New appliances such as smart TVs, alarm clocks, fridges or digital-picture frames make our living-rooms and houses more energy efficient and our lives easier. Industries benefit from increasingly more intelligent machines and robots. Usual objects tagged with radio-tags or barcodes become linked to virtual information sources and offer new business opportunities. 

As a consequence, \newterm{Internet of Things} research is exploring ways to connect smart things together and build upon these networks. To facilitate these connections, research and industry have come up over the last few years with a number of low-power network protocols. However, while getting increasingly more connected, embedded devices still form multiple, small, incompatible islands at the application layer: developing applications using them is a challenging task that requires expert knowledge of each platform. As a consequence, \sts{} remain hard to integrate into composite applications. To remedy this fact, several service platforms proposing an integration architecture appeared in recent years. While some of them are successfully implemented on some appliances and machines, they are, for the most part, not compatible with one another. Furthermore, their complexity and lack of well-known tools let them only reach a relatively small community of expert developers and hence their usage in applications has been rather limited.

On the other hand, the Internet is a compelling example of a scalable global network of computers that interoperate across heterogeneous hardware and software platforms. On top of the Internet, the Web illustrates well how a set of relatively simple and open standards can be used to build very flexible systems while preserving efficiency and scalability. The cross-integration and developments of composite applications on the Web, alongside with its ubiquitous availability across a broad range of devices (e.g., desktops, laptops, mobile phones, set-top boxes, gaming devices, etc.), make the Web an outstanding candidate for a universal integration platform. Web sites do not offer only pages anymore, but Application Programming Interfaces that can be used by other Web resources to create new, ad-hoc and composite applications running in the computing cloud and being accessed by desktops or mobile computers.

In this thesis we use the Web and its emerging technologies as the basis of a \sts{} application integration platform. In particular, we propose a \WoTLong{} application architecture offering four layers that simplify the development of applications involving \sts{}. First, we address \important{device accessibility} and propose implementing, on \sts{}, the architectural principles that are at the heart of the Web such the Representational State Transfer (REST). We extend the REST architecture by proposing and implementing a number of improvements to fit the special requirements of the physical world such as the need for domain-specific proxies or real-time communication. 

In the second layer we study \important{findability}: In a Web populated by billions of \sts{}, how can we identify the devices we can interact with, the devices that provide the right service for our application? To address these issues we propose a lightweight metadata format that search engines can understand, together with a Web-oriented discovery and lookup infrastructure that leverages the particular context of \sts{}. 

While the \WoTLong{} fosters a rather open network of physical objects, it is very unlikely that in the future access to \sts{} will be open to anyone. In the third layer we propose a \important{sharing} infrastructure that leverages social graphs encapsulated by social networks. We demonstrate how this helps sharing \sts{} in a straightforward, user-friendly and personal manner, building a Social \WoTLong{}.

Our primary goal in bringing \sts{} to the Web is to facilitate their integration into composite applications. Just as Web developers and tech-savvies create Web 2.0 mashups (i.e., lightweight, ad-hoc compositions of several services on the Web), they should be able to create applications involving \sts{} with similar ease. Thus, in the \important{composition} layer we introduce the \important{physical mashups} and propose a software platform, built as an extension of an open-source workflow engine, that offers basic constructs which can be used to build mashup editors for the \WoTLong{}. 

Finally, to test our architecture and the proposed tools, we apply them to two types of \sts{}. First we look at wireless sensor networks, in particular at energy and environmental monitoring sensor nodes. We evaluate the benefits of applying the proposed architecture first empirically by means of several prototypes, then quantitatively by running performance evaluations and finally qualitatively with the help several developers who used our frameworks to develop mobile and Web-based applications. Then, to better understand and evaluate how the \WoTLong{} architecture can facilitate the development of real-world aware business applications, we study automatic identification systems and propose a framework for bringing RFID data to the Web and global RFID information systems to the cloud. We evaluate the performance of this framework and illustrate its benefits with several prototypes.

Put together, these contributions materialize into an ecosystem of building-blocks for the \WoTLong{}: a world-wide and interoperable network of \sts{} on which applications can be easily built, one step closer to bridging the gap between the virtual and physical worlds.


\end{document}
